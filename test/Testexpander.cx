#include "unity.h"
#include "minishell.h"
#include "parser.h"
#include <stdarg.h>

t_tools test_tools;
t_simple_cmds test_simple_cmd;

void	setUp(void)
{
	// set stuff up here
}

void	tearDown(void)
{
	// clean stuff up here
}

void	init_test(char *line)
{

}

void	assert_expander(void)
{
	TEST_ASSERT_NOT_NULL_MESSAGE(test_simple_cmd.expander, "expander function not connected.");
}

void test_expander_1(void)
{
	init_test("echo hello");
	assert_mini_echo();
}

void test_expander_2(void)
{
	init_test("env");
	assert_mini_env(test_envp);
}

void test_expander_3(void)
{
	init_test("cd ..");
	assert_mini_cd(path_to_minishell, path_to_test);
}

void test_expander_4(void)
{
	init_test(ft_strjoin("cd /Users/", ft_strjoin(getenv("USER"), "/Documents")));
	assert_mini_cd(ft_strjoin("/Users/", ft_strjoin(getenv("USER"), "/Documents")), path_to_minishell);
}

void test_expander_5(void)
{
	init_test(ft_strjoin(ft_strjoin("cd ", path_to_minishell), "/src"));
	assert_mini_cd(ft_strjoin(path_to_minishell, "/src"), ft_strjoin("/Users/", ft_strjoin(getenv("USER"), "/Documents")));
}

void test_expander_6(void)
{
	init_test("export test=\"a\"");
	assert_mini_export("test", "test=a");
}

void test_expander_7(void)
{
	init_test("export test=\"b\"");
	assert_mini_export("test", "test=b");
}

void test_expander_8(void)
{
	init_test("unset test");
	assert_mini_unset("test");
}

void test_expander_9(void)
{
	init_test("export test2=c");
	assert_mini_export("test2", "test2=c");
}

void test_expander_10(void)
{
	init_test("env");
	assert_mini_env(test_envp);
}

void test_expander_11(void)
{
	init_test("pwd");
	assert_mini_pwd(getcwd(NULL, sizeof(NULL)));
}

void test_expander_12(void)
{
	init_test("unset test2");
	assert_mini_unset("test2");
}

int	main(int argc, char **argv, char **envp)
{
	UNITY_BEGIN();
	RUN_TEST(test_expander_1);
	TEST_MESSAGE("1: {echo hello}");
	RUN_TEST(test_expander_2);
	TEST_MESSAGE("2: env");
	RUN_TEST(test_expander_3);
	TEST_MESSAGE("3: {cd ..}");
	RUN_TEST(test_expander_4);
	TEST_MESSAGE("4: {cd {path to} Documents'}");
	RUN_TEST(test_expander_5);
	TEST_MESSAGE("5: {cd {path from Documents to} minishell/src}");
	RUN_TEST(test_expander_6);
	TEST_MESSAGE("6: {export test=\"a\"}");
	RUN_TEST(test_expander_7);
	TEST_MESSAGE("7: {export test=\"b\"}");
	RUN_TEST(test_expander_8);
	TEST_MESSAGE("8: {unset test}");
	RUN_TEST(test_expander_9);
	TEST_MESSAGE("9: {export test2=c}");
	// RUN_TEST(test_expander_10);
	// TEST_MESSAGE("10: {env}");
	RUN_TEST(test_expander_11);
	TEST_MESSAGE("11: {pwd}");
	RUN_TEST(test_expander_12);
	TEST_MESSAGE("12: {unset test2}");
	return UNITY_END();
}